dev.off()
## Plot4
par (mfrow = c (2, 2),
mar = c (4, 4, 2, 2),
oma = c (0, 0, 1, 0))
with (EPC,{
## Upper-Left
plot (Global_active_power ~ datetime,
type = "l",
ylab = "Global Active Power",
xlab = "")
## Upper Right
plot (Voltage ~ datetime,
type = "l",
ylab = "Voltage",
xlab = "datetime")
## Lower Left
plot (Sub_metering_1 ~ datetime,
type = "l",
ylab = "Energy sub metering",
xlab = "")
lines (Sub_metering_2 ~ datetime, col = "Red")
lines (Sub_metering_3 ~ datetime, col = "blue")
legend ("topright",
legend = c ("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c ("black", "red", "blue"),
lty = 1,
lwd = 2
)
## Lower Right
plot (Global_reactive_power ~ datetime,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
})
dev.copy (png, file = "./data/plot4.png")
dev.off()
## Download the repository: Dataset --> Electric power consumption
if (!file.exists("./data/household_power_consumption.txt")){
## Source file - URL
URLFile <- "http://d396qusza40orc.cloudfront.net/exdata/data/household_power_consumption.zip"
## Destination file
destFilezip = "./data/UDC.zip"
## Download file
download.file (URLFile, destFilezip)
## Unzip file
unzip (destFilezip, overwrite = T, exdir = "./data")
}
## Loading data from the dates 2007-02-01 and 2007-02-02
##powerConsumption <- file ("./data/household_power_consumption.txt")
## Loading the period of time to a data.table
EPC <- read.csv ("./data/household_power_consumption.txt",
header = T,
sep = ";",
na.strings = "?")
## convert the Date and Time variables to Date/Time classes
strptime (EPC$Time, format = "%H:%M:%S")
EPC$Date <- as.Date(EPC$Date, format = "%d/%m/%Y")
## Extracting the period of time --> 2 days
EPC <- subset (EPC, subset = (Date >= "2007-02-01" & Date <= "2007-02-02"))
## Column that contains a calendar dates and times, join EPC$Date + EPC$Time
EPC$datetime <- as.POSIXct (paste (EPC$Date, EPC$Time))
## Plot1
hist (EPC$Global_active_power,
col = "red",
main = paste ("Global Active Power"),
xlab = "Global Active Power (kilowatts)")
dev.copy (png, file = "./data/plot1.png")
dev.off()
## Plot2
plot (EPC$Global_active_power ~ EPC$datetime,
type = "l",
ylab = "Global Active Power (kilowatts)",
xlab = "")
dev.copy (png, file = "./data/plot2.png")
dev.off()
## Plot3
with (EPC, {
plot (Sub_metering_1 ~ datetime,
type = "l",
ylab = "Energy sub metering",
xlab = "")
lines (Sub_metering_2 ~ datetime, col = "Red")
lines (Sub_metering_3 ~ datetime, col = "blue")
})
legend ("topright",
legend = c ("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c ("black", "red", "blue"),
lty = 1,
lwd = 2
)
dev.copy (png, file = "./data/plot3.png")
dev.off()
## Plot4
par (mfrow = c (2, 2),
mar = c (4, 4, 2, 2),
oma = c (0, 0, 1, 0))
with (EPC,{
## Upper-Left
plot (Global_active_power ~ datetime,
type = "l",
ylab = "Global Active Power",
xlab = "")
## Upper Right
plot (Voltage ~ datetime,
type = "l",
ylab = "Voltage",
xlab = "datetime")
## Lower Left
plot (Sub_metering_1 ~ datetime,
type = "l",
ylab = "Energy sub metering",
xlab = "")
lines (Sub_metering_2 ~ datetime, col = "Red")
lines (Sub_metering_3 ~ datetime, col = "blue")
legend ("topright",
legend = c ("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
col = c ("black", "red", "blue"),
lty = 1,
lwd = 2
)
## Lower Right
plot (Global_reactive_power ~ datetime,
type = "l",
ylab = "Global_reactive_power",
xlab = "datetime")
})
dev.copy (png, file = "./data/plot4.png")
dev.off()
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
load(url("http://bit.ly/dasi_gss_data"))
names (gss)
?print.trellis
?trellis.par.set
?qplot
#should be run in the directory with household_power_consumption.txt
#first loads in some of the data, roughly where the data we want is
#I experimented and found the general rows in the data that contain the dates we want to analyze
DT <- read.table("./data/household_power_consumption.txt", skip=66000, nrow=5000, header=TRUE, sep=";")
#also have to load in the headers since the skip skipped them
DT_header <- read.table("./data/household_power_consumption.txt", nrow=1, header=TRUE, sep=";")
#combines the headers back on
names(DT) <- names(DT_header)
#subsets to the exact dates we want to analyze
data <- DT[DT$Date == "2/2/2007" | DT$Date == "1/2/2007",]
#changes the date and time format to date and time
#data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
#strptime(data$Time, format= "%H:%M:%S")
#combines the date and time format
data$datetime <- paste(data$Date, data$Time)
#makes datetime format what we want
data$datetime <- strptime(data$datetime, "%Y-%m-%d %H:%M:%S")
#sets some basic parameters for the charts
par(pin = c(50,50), mar=c(5,5,2,1))
#plot one
png("plot1.png", height=480, width=480, unit="px")
hist(data$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
dev.off()
#should be run in the directory with household_power_consumption.txt
#first loads in some of the data, roughly where the data we want is
#I experimented and found the general rows in the data that contain the dates we want to analyze
DT <- read.table("./data/household_power_consumption.txt", skip=66000, nrow=5000, header=TRUE, sep=";")
#also have to load in the headers since the skip skipped them
DT_header <- read.table("./data/household_power_consumption.txt", nrow=1, header=TRUE, sep=";")
#combines the headers back on
names(DT) <- names(DT_header)
#subsets to the exact dates we want to analyze
data <- DT[DT$Date == "2/2/2007" | DT$Date == "1/2/2007",]
#changes the date and time format to date and time
#data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
#strptime(data$Time, format= "%H:%M:%S")
#combines the date and time format
data$datetime <- paste(data$Date, data$Time)
#makes datetime format what we want
data$datetime <- strptime(data$datetime, "%Y-%m-%d %H:%M:%S")
#sets some basic parameters for the charts
par(pin = c(50,50), mar=c(5,5,2,1))
#plot one
png("./data/plot1.png", height=480, width=480, unit="px")
hist(data$Global_active_power, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)")
dev.off()
#should be run in the directory with household_power_consumption.txt
#first loads in some of the data, roughly where the data we want is
#I experimented and found the general rows in the data that contain the dates we want to analyze
DT <- read.table("./data/household_power_consumption.txt", skip=66000, nrow=5000, header=TRUE, sep=";")
#also have to load in the headers since the skip skipped them
DT_header <- read.table("household_power_consumption.txt", nrow=1, header=TRUE, sep=";")
#combines the headers back on
names(DT) <- names(DT_header)
#subsets to the exact dates we want to analyze
data <- DT[DT$Date == "2/2/2007" | DT$Date == "1/2/2007",]
#changes the date and time format to date and time
data[,1] <- as.Date(data[,1], format = "%d/%m/%Y")
strptime(data$Time, format= "%H:%M:%S")
#combines the date and time format
data$datetime <- paste(data$Date, data$Time)
#makes datetime format what we want
data$datetime <- strptime(data$datetime, "%Y-%m-%d %H:%M:%S")
#sets some basic parameters for the charts
par(pin = c(50,50), mar=c(5,5,2,1))
#plot two
data$datetime
with(data, plot(datetime, Global_active_power, type="n", xlab="", ylab="Global Active Power (kilowatts)"))
with(data, lines(datetime, Global_active_power))
png("./data/plot2.png", height=480, width=480, unit="px")
with(data, plot(datetime, Global_active_power, type="n", xlab="", ylab="Global Active Power (kilowatts)"))
with(data, lines(datetime, Global_active_power))
dev.off()
plot1 <- function() {
library(lubridate)
# read header and first line
first_line <- read.table("./data/household_power_consumption.txt",
nrow=1,
header=TRUE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";")
# create a vector of column names
col_names <- names(first_line)
# read in the lines for Feb 1-2, 2007 while also reading the column names
hpc <- read.table("household_power_consumption.txt",
skip=66637,
nrow=2880,
header=FALSE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";",
col.names = col_names)
# Convert date and time columns from character to date/time, then combine
hpc$Date <- dmy(hpc$Date)
hpc$Time <- hms(hpc$Time)
hpc$Date_Time <- hpc$Date + hpc$Time
# Plot 1
png(filename = "./data/plot11.png", width = 480, height = 480, units = "px")
x <- hpc$Global_active_power
hist(x, col="red", xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off() #closes the graphics device
}
plot1 <- function() {
library(lubridate)
# read header and first line
first_line <- read.table("./data/household_power_consumption.txt",
nrow=1,
header=TRUE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";")
# create a vector of column names
col_names <- names(first_line)
# read in the lines for Feb 1-2, 2007 while also reading the column names
hpc <- read.table("household_power_consumption.txt",
skip=66637,
nrow=2880,
header=FALSE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";",
col.names = col_names)
# Convert date and time columns from character to date/time, then combine
hpc$Date <- dmy(hpc$Date)
hpc$Time <- hms(hpc$Time)
hpc$Date_Time <- hpc$Date + hpc$Time
# Plot 1
png(filename = "./data/plot11.png", width = 480, height = 480, units = "px")
x <- hpc$Global_active_power
hist(x, col="red", xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off() #closes the graphics device
}
plot1 <- function() {
library(lubridate)
# read header and first line
first_line <- read.table("./data/household_power_consumption.txt",
nrow=1,
header=TRUE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";")
# create a vector of column names
col_names <- names(first_line)
# read in the lines for Feb 1-2, 2007 while also reading the column names
hpc <- read.table("./data/household_power_consumption.txt",
skip=66637,
nrow=2880,
header=FALSE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";",
col.names = col_names)
# Convert date and time columns from character to date/time, then combine
hpc$Date <- dmy(hpc$Date)
hpc$Time <- hms(hpc$Time)
hpc$Date_Time <- hpc$Date + hpc$Time
# Plot 1
png(filename = "./data/plot11.png", width = 480, height = 480, units = "px")
x <- hpc$Global_active_power
hist(x, col="red", xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off() #closes the graphics device
}
library(lubridate)
# read header and first line
first_line <- read.table("./data/household_power_consumption.txt",
nrow=1,
header=TRUE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";")
# create a vector of column names
col_names <- names(first_line)
# read in the lines for Feb 1-2, 2007 while also reading the column names
hpc <- read.table("./data/household_power_consumption.txt",
skip=66637,
nrow=2880,
header=FALSE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";",
col.names = col_names)
# Convert date and time columns from character to date/time, then combine
hpc$Date <- dmy(hpc$Date)
hpc$Time <- hms(hpc$Time)
hpc$Date_Time <- hpc$Date + hpc$Time
# Plot 1
png(filename = "./data/plot11.png", width = 480, height = 480, units = "px")
x <- hpc$Global_active_power
hist(x, col="red", xlab="Global Active Power (kilowatts)",
main="Global Active Power")
dev.off() #closes the graphics device
library(lubridate)
# read header and first line
first_line <- read.table("./data/household_power_consumption.txt",
nrow=1,
header=TRUE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";")
# create a vector of column names
col_names <- names(first_line)
# read in the lines for Feb 1-2, 2007 while also reading the column names
hpc <- read.table("./data/household_power_consumption.txt",
skip=66637,
nrow=2880,
header=FALSE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";",
col.names = col_names)
# Convert date and time columns from character to date/time, then combine
hpc$Date <- dmy(hpc$Date)
hpc$Time <- hms(hpc$Time)
hpc$Date_Time <- hpc$Date + hpc$Time
# Plot 2
png(filename = "./data/plot12.png", width = 480, height = 480, units = "px")
x <- hpc$Date_Time
y <- hpc$Global_active_power
plot(x, y, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off() #closes the graphics device
library(lubridate)
# read header and first line
first_line <- read.table("./data/household_power_consumption.txt",
nrow=1,
header=TRUE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";")
# create a vector of column names
col_names <- names(first_line)
# read in the lines for Feb 1-2, 2007 while also reading the column names
hpc <- read.table("./data/household_power_consumption.txt",
skip=66637,
nrow=2880,
header=FALSE,
#stringsAsFactors=FALSE,
colClasses=c(rep("character", 2), rep("numeric", 7)),
sep = ";",
col.names = col_names)
# Convert date and time columns from character to date/time, then combine
hpc$Date <- dmy(hpc$Date)
hpc$Time <- hms(hpc$Time)
hpc$Date_Time <- hpc$Date + hpc$Time
# Plot 3
png(filename = "./data/plot13.png", width = 480, height = 480, units = "px")
x <- hpc$Date_Time
y1 <- hpc$Sub_metering_1
y2 <- hpc$Sub_metering_2
y3 <- hpc$Sub_metering_3
plot(x, y1, xlab="", ylab="Energy sub metering", type="n")
points(x, y1, type="l")
points(x, y2, type="l", col="red")
points(x, y3, type="l", col="blue")
legend("topright", lty="solid", col=c("black", "red", "blue"),
legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off() #closes the graphics device
library(dplyr)
library(data.table)
library(lubridate)
#file downloaded "2015-03-02" from http://archive.ics.uci.edu/ml/
household_data<-data.table(read.table("./data/household_power_consumption.txt",sep=";",header=TRUE,as.is=TRUE))
#grab only the required data
trim_data<-household_data[Date %in% c('1/2/2007','2/2/2007')]
#create a date column as a date tyoe if needed
trim_data$date<-as.Date(parse_date_time(trim_data$Date,"d!/m*!/y"))
#open the device
png(filename = "./data/plot111.png",
width = 480, height = 480,)
hist(as.numeric(trim_data$Global_active_power),
xlab="Global Active Power (kilowatts)" , main="Global Active Power",
col="red")
#close the device
dev.off()
library(dplyr)
library(data.table)
library(lubridate)
#file downloaded "2015-03-02" from http://archive.ics.uci.edu/ml/
household_data<-data.table(read.table("./data/household_power_consumption.txt",sep=";",header=TRUE,as.is=TRUE))
#select the needed data
trim_data<-household_data[Date %in% c('1/2/2007','2/2/2007')]
\
#add some dates
trim_data$date<-as.Date(parse_date_time(trim_data$Date,"d!/m*!/y"))
trim_data$day<-wday(trim_data$date,label=TRUE)
\
#open the device
png(filename = "./data/plot333.png",
width = 480, height = 480,)
#day boundries
daysBoundry<-c(0,1441,2881)
#plot first variable
plot(as.numeric(trim_data$Sub_metering_1),
ylab="Energy sub metering" ,
xaxt="n",type="l",xlab="")
#add additional data
lines(as.numeric(trim_data$Sub_metering_2),col="red")
lines(as.numeric(trim_data$Sub_metering_3),col="blue")
#add axis
axis(1,daysBoundry,labels=c("Thu","Fri","Sat"))
#add legend
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"), lty=1)
dev.off()
Status
API
Training
Shop
Blog
About
dataset <- "./data/household_power_consumption.txt"
# Read dataset into R ----------------------------------------------------------
data <- read.table(dataset,
header = TRUE,
sep = ";",
na.strings = "?")
# Convert Date and Time variables ----------------------------------------------
data$Date <- as.Date(data$Date, "%d/%m/%Y")
dateTime <- paste(data$Date, data$Time)
data$Time <- strptime(dateTime, "%Y-%m-%d %H:%M:%S")
# Subset dates from 2007-02-01 to 2007-02-02 -----------------------------------
startDate <- as.Date("01/02/2007", "%d/%m/%Y")
endDate <- as.Date("02/02/2007", "%d/%m/%Y")
dataSubset <- data[data$Date >= startDate & data$Date <= endDate, ]
# Generate Global active power histogram ---------------------------------------
par(mfrow = c(1, 1)) # reset plot layout
with(dataSubset, hist(Global_active_power,
col = "red",
xlab = "Global Active Power (kilowatts)",
main = "Global Active Power Histogram"))
with(dataSubset, rug(Global_active_power))
# Save plot to a PNG -----------------------------------------------------------
dev.copy(png,
file = "./data/plot14.png",
width = 480,
height = 480)
dev.off()
# Loading librarieslibrary (downloader)projectFolder <- "Project2EDA"setwd ("~/")# If folder does not exist, dir.create is used to create itif (!file.exists (projectFolder)){        dir.create (projectFolder)}setwd(projectFolder)## Download the repository: Dataset -->Data for Peer Assessmentif (!file.exists("Source_Classification_Code.rds")||!file.exists("summarySCC_PM25.rds")){        ## Source file - URL        URLFile <- "https://d396qusza40orc.cloudfront.net/exdata/data/NEI_data.zip"        ## Destination file        destFilezip = "NEI_dataEDA.zip"        ## Download file        download (URLFile, destFilezip)        ## Unzip file        unzip (destFilezip, overwrite = T, exdir = projectFolder)}
# Loading librarieslibrary (downloader)projectFolder <- "Project2EDA"setwd ("~/")# If folder does not exist, dir.create is used to create itif (!file.exists (projectFolder)){        dir.create (projectFolder)}setwd(projectFolder)## Download the repository: Dataset -->Data for Peer Assessmentif (!file.exists("Source_Classification_Code.rds")||!file.exists("summarySCC_PM25.rds")){        ## Source file - URL        URLFile <- "https://d396qusza40orc.cloudfront.net/exdata/data/NEI_data.zip"        ## Destination file        destFilezip = "NEI_dataEDA.zip"        ## Download file        download (URLFile, destFilezip)        ## Unzip file        unzip (destFilezip, overwrite = T, exdir = projectFolder)}
# Loading librarieslibrary (downloader)projectFolder <- "Project2EDA"setwd ("~/")# If folder does not exist, dir.create is used to create itif (!file.exists (projectFolder)){        dir.create (projectFolder)}setwd(projectFolder)
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
shiny::runApp('project')
?renderTable
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
?tags
shiny::runApp('project')
shiny::runApp('project')
shiny::runApp('project')
setwd("~/shinyproject_coursera/oreyesc.github.io")
library (slidify)
slidify ("index.Rmd")
runDeck()
slidify ("index.Rmd")
runDeck()
library (slidify)
setwd("~/shinyproject_coursera/oreyesc.github.io")
slidify ("index.Rmd")
slidify ("index.Rmd")
slidify ("index.Rmd")
slidify ("index.Rmd")
